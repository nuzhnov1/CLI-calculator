-------------------------------------------------------------------------------------------------
Priority of operators:                                                                          |
1: Factorial operation ("!"). Left-association.                                                 |
2: Exponentiation ("^"). Right-association.                                                     |
3: Unary plus ("+") and unary minus ("-"). Right-association.                                   |
4: Multiplication ("*"), division ("/") and modulo operation ("%"). Left-association.           |
5: Summation ("+") and subtraction ("-"). Left-association.                                     |
-------------------------------------------------------------------------------------------------
Formal grammar:                                                                                 |
-------------------------------------------------------------------------------------------------
Statement ::= ident assign #TokenToPostfix Expr #AssignToPostfix EOL                            |
          |   Expr EOL                                                                          |
          |   command #TokenToPostfix EOL                                                       |
          |   EOL                                                                               |
          |   EOF #ExitToPostfix                                                                |
                                                                                                |
Expr ::= ExprPriority5 ExprRest                                                                 |
ExprRest ::= "+" ExprPriority5 #BinPlusToPostfix ExprRest                                       |
         |   "-" ExprPriority5 #BinMinusToPostfix ExprRest                                      |
         |   epsilon                                                                            |
ExprPriority5 ::= ExprPriority4 ExprPriority5Rest                                               |
ExprPriority5Rest ::= "*" ExprPriority4 #MulToPostfix ExprPriority5Rest                         |
                  |   "/" ExprPriority4 #DivToPostfix ExprPriority5Rest                         |
                  |   "%" ExprPriority4 #ModToPostfix ExprPriority5Rest                         |
                  |   ExprPriority3 #MulToPostfix ExprPriority5Rest                             |
                  |   epsilon                                                                   |
ExprPriority4 ::= "+" ExprPriority4                                                             |
              |   "-" ExprPriority4 #UnMinusToPostfix                                           |
              |   ExprPriority3                                                                 |
ExprPriority3 ::= ExprPriority2 ExprPriority3Rest                                               |
ExprPriority3Rest ::= "^" ExprPriority4 #PowToPostfix ExprPriority3Rest                         |
                  |   epsilon                                                                   |
ExprPriority2 ::= ExprPriority1 ExprPriority2Rest                                               |
ExprPriority2Rest ::= "!" #FactorialToPostfix ExprPriority2Rest                                 |
                  |   epsilon                                                                   |
ExprPriority1 ::= ident #TokenToPostfix                                                         |
              |   number #TokenToPostfix                                                        |
              |   "(" Expr ")"                                                                  |
              |   "[" Expr "]"                                                                  |
------------------------------------------------------------------------------------------------|
Parser actions:                                                                                 |
------------------------------------------------------------------------------------------------|
TokenToPostfix ::= { toPostfix(curToken) }                                                      |
ExitToPostfix ::= { toPostfix(PostfixItem(PostfixItem.Kind.COMMAND, "exit")) }                  |
AssignToPostfix ::= { toPostfix(PostfixItem(PostfixItem.Kind.OP, "=")) }                        |
BinPlusToPostfix ::= { toPostfix(PostfixItem(PostfixItem.Kind.OP, "+")) }                       |
BinMinusToPostfix ::= { toPostfix(PostfixItem(PostfixItem.Kind.OP, "-")) }                      |
UnMinusToPostfix ::= { toPostfix(PostfixItem(PostfixItem.Kind.OP, "u-")) }                      |
MulToPostfix ::= { toPostfix(PostfixItem(PostfixItem.Kind.OP, "*")) }                           |
DivToPostfix ::= { toPostfix(PostfixItem(PostfixItem.Kind.OP, "/")) }                           |
ModToPostfix ::= { toPostfix(PostfixItem(PostfixItem.Kind.OP, "%")) }                           |
PowToPostfix ::= { toPostfix(PostfixItem(PostfixItem.Kind.OP, "^")) }                           |
FactorialToPostfix ::= { toPostfix(PostfixItem(PostfixItem.Kind.OP, "!")) }                     |
-------------------------------------------------------------------------------------------------

